jobs:
  build:
    docker:
    - image: docker:19.03.15
    steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: DOCKER_BUILDKIT=1 docker build --progress=plain -t tritonmedia/downloader-go
          -f Dockerfile .
        name: Build "tritonmedia/downloader-go" Docker Image
    - run:
        command: echo "$DOCKER_PASSWORD" | docker login --username "${DOCKER_USERNAME}"
          --password-stdin && docker push tritonmedia/downloader-go
        name: Publish "tritonmedia/downloader-go" Docker Image
  test-docker-build:
    docker:
    - image: docker:19.03.15
    steps:
    - checkout
    - setup_remote_docker:
        version: 18.09.3
    - run:
        command: DOCKER_BUILDKIT=1 docker build --progress=plain -t downloader-go
          -f Dockerfile .
        name: Build "downloader-go" Docker Image
  tests:
    docker:
    - image: tritonmedia/testbed
    steps:
    - checkout
    - restore_cache:
        key: go-deps-{{ checksum "go.sum" }}
    - run:
        command: go mod vendor
        name: Fetch Dependencies
    - run:
        command: make CGO_ENABLED=0 test
        name: Run Tests
    - run:
        command: ./hack/verify-go-mod.sh
        name: Verify Go Modules
    - run:
        command: ./hack/verify-circleci.sh
        name: Verify CircleCI Configuration
    - save_cache:
        key: go-deps-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
version: 2
workflows:
  build-push:
    jobs:
    - tests:
        context: Docker
    - test-docker-build:
        context: Docker
    - build:
        context: Docker
        filters:
          branches:
            only:
            - master
        requires:
        - tests
        - test-docker-build
  version: 2
